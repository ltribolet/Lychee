name: CI Pipeline

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    laravel:
        name: Laravel (PHP ${{ matrix.php-versions }})
        runs-on: ubuntu-latest
        env:
            DB_CONNECTION: sqlite
            DB_DATABASE: database/database.sqlite
            CACHE_DRIVER: array
            QUEUE_CONNECTION: sync
            SESSION_DRIVER: array
            MAIL_DRIVER: array
            APP_ENV: testing
        strategy:
            fail-fast: false
            matrix:
                php-versions: ['7.4']
        steps:
            - name: Checkout
              uses: actions/checkout@v2.3.4
            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
              with:
                  php-version: ${{ matrix.php-versions }}
                  extensions: mbstring, dom, fileinfo, mysql, intl, exif, gd, json, imagick
                  coverage: xdebug #optional
            -   name: Create Database
                run: |
                    mkdir -p database
                    touch database/database.sqlite
            - name: Get composer cache directory
              id: composercache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            - name: Cache composer dependencies
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composercache.outputs.dir }}
                  # Use composer.json for key, if composer.lock is not committed.
                  # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-
            - name: Install Composer dependencies
              run: composer install --no-progress --prefer-dist --optimize-autoloader
            - name: Prepare the application
              run: |
                  php -r "file_exists('.env') || copy('.env.example', '.env');"
                  php artisan key:generate
            - name: Clear Config
              run: php artisan config:clear
            - name: Run Migration
              run: php artisan migrate --no-interaction -v
            - name: Code Standards
              run: vendor/bin/ecs check --ansi
            - name: Test with phpunit
              run: vendor/bin/phpunit --coverage-text