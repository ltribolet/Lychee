#!/bin/bash
NO_COLOR="\033[0m"
GREEN="\033[38;5;010m"
YELLOW="\033[38;5;011m"

echo "\n${GREEN}pre commit hook start${NO_COLOR}\n"

# Check PHP Styles

# Determine if we have php locally
phpversion="$(php --version 2>/dev/null | head -n 1 | cut -d " " -f 2 | cut -c 1,3)"

#if we have php 7.2 locally. then use phpcs locally
if [ $phpversion -ge 74 ] 2>/dev/null; then
    phpecs_cmd="php -d memory_limit=-1 ./vendor/bin/ecs check --no-progress-bar"
#Otherwise let docker run the code
else
    phpecs_cmd="docker-compose exec lychee php -d memory_limit=-1 ./vendor/bin/ecs check"
fi

# First, we check code quality
echo 'Checking PHP code style...'

# Are there any diffed files to check
files_ecs=""
maxSize=$(expr `getconf ARG_MAX` - `env|wc -c` - `env|wc -l` \* 4 - 2048)
while read filename; do
    files_ecs+=" $filename"
done < <(git diff --name-only --cached --diff-filter=d -- '*.php')

# If argument list is too long then we just run everything.
size=${#files_ecs}
if [ "$size" -gt "$maxSize" ]; then
  files_ecs="."
fi

# if so run ECS
if [ -z "$files_ecs" ]; then
    echo "\n${GREEN}No files to run on for ECS${NO_COLOR}\n"
else
    # We ignore warnings
    phpecs_cmd+=" $files_ecs"
    eval "$phpecs_cmd"
fi

PHPECS_EC=$?
# Exit if any error codes
let "ERROR = $PHPECS_EC"
if [ "${ERROR}" -ne "0" ]; then
    echo "${YELLOW}Commit aborted.${NO_COLOR}"
    echo "${YELLOW}Run ./vendor/bin/ecs check {FILE} --fix to fix it if possible.${NO_COLOR}"
    exit ${ERROR}
fi

echo "\n${GREEN}pre commit hook finish${NO_COLOR}\n"